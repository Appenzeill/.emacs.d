#+STARTUP: overview 
* Interface Tweaks
** Startup, general settings & packages
#+BEGIN_SRC emacs-lisp
;; Remove initial buffer, set index file
;; (setq inhibit-startup-message t)
;; (setq initial-buffer-choice "index.org")

;; Hide Scroll bar,menu bar, tool bar
(scroll-bar-mode -1)
(tool-bar-mode -1)
(menu-bar-mode -1)

;; Page numbering
(global-display-line-numbers-mode)
(setq display-line-numbers-type 'relative)

;; Display battery for when in full screen mode
(display-battery-mode t)

;; Helm
 (use-package helm 
   :ensure t
   :config (helm-mode 1))
(require 'helm-config)

(setq helm-split-window-in-side-p t
helm-move-to-line-cycle-in-source t)

;; Company mode
 (use-package company 
   :ensure t)

;; Which key
(use-package which-key 
   :ensure t)
(require 'helm-config)
(which-key-mode)

;; Flycheck
(use-package magit
   :ensure t)
#+END_SRC

#+RESULTS:
: t

** Keybindings
test
** Theming & Aesthethic
#+BEGIN_SRC emacs-lisp
(use-package sublime-themes
   :config
   (load-theme 'spolsky t)
   :ensure t)
#+END_SRC

#+RESULTS:
: t

** Programming, Scripting & Markup Langugages
*** Rust
#+BEGIN_SRC emacs-lisp
;; Rust major mode
(use-package rust-mode 
   :ensure t)
 
;; Racer 
(use-package racer 
   :ensure t)

(setq racer-cmd "~/.cargo/bin/racer") ;; Rustup binaries PATH
(setq racer-rust-src-path "/home/daan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src") ;; Rust source code PATH

(add-hook 'rust-mode-hook #'racer-mode)
(add-hook 'racer-mode-hook #'eldoc-mode)
(add-hook 'racer-mode-hook #'company-mode)

(require 'rust-mode)
(define-key rust-mode-map (kbd "TAB") #'company-indent-or-complete-common)
(setq company-tooltip-align-annotations t)

;; Cargo minor mode
(use-package cargo 
   :ensure t)
(add-hook 'rust-mode-hook 'cargo-minor-mode)

#+END_SRC

#+RESULTS:
| cargo-minor-mode | racer-mode |
*** Org
#+BEGIN_SRC emacs-lisp
(use-package org-superstar  ;; Improved version of org-bullets
  :ensure t
  :config
  (add-hook 'org-mode-hook (lambda () (org-superstar-mode 1))))
  
(setq org-startup-indented t)           ;; Indent according to section
(setq org-startup-with-inline-images t) ;; Display images in-buffer by default
#+END_SRC

#+RESULTS:
: t
